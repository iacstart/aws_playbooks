---

- hosts: all
  gather_facts: true
  remote_user: ubuntu
  become: true

  vars:
  #  mysql_packages:
  #    - python-mysqldb

    mysql_root_password: super-secure-password
    mysql_users:
      - name: webshop
        password: superSECR3T
        state: present
        host: "%"
        priv: "*.*:ALL,GRANT"
    mysql_databases:
      - name: webshop
        encoding: utf8
        collation: utf8_general_ci
    
    install_path: /opt/iac_shop
    db_name: webshop
    db_user: webshop
    db_password: superSECR3T
    db_host: "{{ db_private_ip }}"

  pre_tasks:
    - name: Install MySQL Python Packages
      apt: 
        name: ['python3-pip', 'python3-mysqldb', 'python-mysqldb']
        state: present
        update_cache: yes

  roles:
    - role: geerlingguy.mysql
    #- role: ansible-role-mysql
      become: yes
 
  tasks:
    - name: install software
      apt:
        pkg:
          - git
          - make
          - gcc
          - ruby
          - ruby-dev
          - ruby-bundler
          - ruby-mysql2
          - mariadb-server
          - libmariadb-dev
          - libmysqlclient-dev
          - build-essential
        update_cache: true
      become: true

    - name: create app folder
      file:
        path: "{{ install_path }}"
        state: directory
        owner: "{{ ansible_ssh_user }}"
      become: true

    - name: install bundler gem
      gem:
        name: bundler
        version: 2.1.4
        state: present
        user_install: false
        env_shebang: true
      become: true

    - name: clone webshop repo
      git:
        repo: https://github.com/iacstart/iac_shop.git
        dest: "{{ install_path }}"
        force: true
        version: develop

    - name: install gems with bundler
      bundler:
        state: present
        chdir: "{{ install_path }}"

    - name: copy mysql database config
      template:
        src: database.yml.mysql.j2
        dest: "{{ install_path }}/config/database.yml"
        owner: "{{ ansible_ssh_user }}"

    - name: setup database
      command: "{{ item }}"
      run_once: true
      args:
        chdir: "{{ install_path }}"
      loop:
        - "bundler exec rake db:create"
        - "bundler exec rake db:migrate"
        - "bundler exec rake db:setup"
